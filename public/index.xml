<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Hackersoon - Documentation</title>
    <link>https://docs.hackersoon.com/</link>
    <description>Recent content on Hackersoon - Documentation</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 17 Dec 2019 00:25:19 +0530</lastBuildDate>
    
	<atom:link href="https://docs.hackersoon.com/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Examples</title>
      <link>https://docs.hackersoon.com/showcase/</link>
      <pubDate>Tue, 17 Dec 2019 00:25:19 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/showcase/</guid>
      <description>some useful editing examples for this website.
 Gist Example
   YouTube Example
    Reference Example
 docker</description>
    </item>
    
    <item>
      <title>Goroutine</title>
      <link>https://docs.hackersoon.com/programming/golang/goroutine/</link>
      <pubDate>Sun, 15 Dec 2019 02:17:40 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/programming/golang/goroutine/</guid>
      <description>This is useful for understand golang goroutines.</description>
    </item>
    
    <item>
      <title>Helm</title>
      <link>https://docs.hackersoon.com/commands/kubernetes/helm/</link>
      <pubDate>Thu, 12 Dec 2019 22:57:37 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/commands/kubernetes/helm/</guid>
      <description>get helm charts
helm ls --all #get specific helm chart helm ls --all &amp;lt;name&amp;gt;  how to install a helm chart
helm install --name &amp;lt;name&amp;gt; &amp;lt;path-tohelm-chart&amp;gt; --namespace &amp;lt;namespace&amp;gt; #use a specific values file helm install --name &amp;lt;name&amp;gt; &amp;lt;path-tohelm-chart&amp;gt; --namespace &amp;lt;namespace&amp;gt; -f &amp;lt;path-to-yaml-file&amp;gt; #more updated helm install --name &amp;lt;name&amp;gt; &amp;lt;path-tohelm-chart&amp;gt; --namespace &amp;lt;namespace&amp;gt; --wait --timeout 1200 --set &#39;image.tag=latest&#39; -f &amp;lt;path-to-yaml-file&amp;gt;  how to install a helm chart
helm upgrade &amp;lt;name&amp;gt; &amp;lt;path-tohelm-chart&amp;gt; --namespace &amp;lt;namespace&amp;gt;  delete a helm chart</description>
    </item>
    
    <item>
      <title>Vault Acl</title>
      <link>https://docs.hackersoon.com/installations/consul_vault/vault_acl/</link>
      <pubDate>Thu, 12 Dec 2019 02:12:50 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/installations/consul_vault/vault_acl/</guid>
      <description>Authenticatin Methods Different types of authentication methods:
 Internal Authentication External Authentication Multiple Authentication  Commands for create authentication methods Enable an auth method vault auth enable [method]  Write Config to an auth method vault write auth/[method]/config  Add a role to the auth method vault write auth/[method]/role/[rolename]  Disable an auth method vault auth disable [method]  Enable userpass method Add envirnmont variables export VAULT_ADDR=&#39;http://127.0.0.1:8200/&#39; export VAULT_TOKEN=&amp;lt;token&amp;gt;  Check auth list vault auth list  Enable userpass auth method  Using vault cli   vault auth enable userpass  using curl api   cutl --header &amp;quot;x-Vault-Token: $VAULT_TOKEN&amp;quot; --request POST \ --data &#39;{&amp;quot;type&amp;quot;:&amp;quot;userpass&amp;quot;}&#39; $VAULT_ADDR/v1/sys/auth/userpass Add a user to the userpass auth method create a user with password vault write auth/userpass/users/&amp;lt;username&amp;gt; password=&amp;lt;****&amp;gt;  get users from userpass methos vault list auth/userpass/users  login in vault with new userpass user credential  login in new user   vault login -method=userpass username=&amp;lt;username&amp;gt;  set vault token as new token   export VAULT_TOKEN=&amp;lt;new token&amp;gt; vault token lookup Remove account vault delete auth/username/users/&amp;lt;username&amp;gt;  Vault Policies  Wallet policies use for provide the role based access.</description>
    </item>
    
    <item>
      <title>Pymongo_client</title>
      <link>https://docs.hackersoon.com/databases/mongodb/pymongo_client/</link>
      <pubDate>Thu, 12 Dec 2019 01:41:04 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/databases/mongodb/pymongo_client/</guid>
      <description>  mongo connection in python with pymongo from pymongo import MongoClient client=MongoClient(&#39;mongodb://&amp;lt;username&amp;gt;:&amp;lt;password&amp;gt;@&amp;lt;ip&amp;gt;:&amp;lt;port&amp;gt;/&amp;lt;database&amp;gt;?authSource=&amp;lt;database&amp;gt;&#39;) db=client[&#39;db_name&#39;] db.collection_names()  </description>
    </item>
    
    <item>
      <title>AVL</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/tree/avl-tree/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/tree/avl-tree/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    AVL Treeclass Node: def __init__(self, data): self.</description>
    </item>
    
    <item>
      <title>BellmanFord</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/graph/bellmanford/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/graph/bellmanford/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Bellman Ford  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124  import sys class Vertex: def __init__(self, name): self.</description>
    </item>
    
    <item>
      <title>BFS</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/tree/bfs/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/tree/bfs/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Breadth First Search  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40  class Node: def __init__(self, name): self.</description>
    </item>
    
    <item>
      <title>Binary Tree Views</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/tree/binary-tree-view/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/tree/binary-tree-view/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Binary Tree Views  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70  class Node: def __init__(self, data): self.</description>
    </item>
    
    <item>
      <title>BST</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/tree/binary-search-tree/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/tree/binary-search-tree/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Binary Search Tree  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122  &amp;#34;&amp;#34;&amp;#34;Implementation of Binary Search Tree&amp;#34;&amp;#34;&amp;#34; class Node: def __init__(self, data): self.</description>
    </item>
    
    <item>
      <title>Circular Queue</title>
      <link>https://docs.hackersoon.com/interviews/ds/queue/queue_circular/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/queue/queue_circular/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Circular Queue  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50  class Empty(Exception): pass class CircularQueue: class _Node: def __init__(self, element, next): self.</description>
    </item>
    
    <item>
      <title>DFS</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/tree/dfs/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/tree/dfs/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Deapth First Search  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56  &amp;#34;&amp;#34;&amp;#34;initiaze a tree node&amp;#34;&amp;#34;&amp;#34; class Node: def __init__(self, name): self.</description>
    </item>
    
    <item>
      <title>Dijkstra</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/graph/dijkstra/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/graph/dijkstra/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Dijkstra  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109  import sys import heapq class Edge: def __init__(self, weight, startVertex, targetVertex): self.</description>
    </item>
    
    <item>
      <title>Heapsort</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/sorting/heapsort/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/sorting/heapsort/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    heapsort  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37  &amp;#34;&amp;#34;&amp;#34;This method is used for heapify the array.</description>
    </item>
    
    <item>
      <title>Mergesort</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/sorting/mergesort/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/sorting/mergesort/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    mergesort  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61  &amp;#34;&amp;#34;&amp;#34;merge logic:This function merge two shorted arrays into one sorted array.</description>
    </item>
    
    <item>
      <title>Positional List</title>
      <link>https://docs.hackersoon.com/interviews/ds/linkedlist/positionallist/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/linkedlist/positionallist/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Positional List  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123  class Empty(Exception): pass class _DoublyLinkedBase: class _Node: __slots__ = &amp;#39;_element&amp;#39;, &amp;#39;_prev&amp;#39;, &amp;#39;_next&amp;#39; def __init__(self, element, prev, next): self.</description>
    </item>
    
    <item>
      <title>Queue dll</title>
      <link>https://docs.hackersoon.com/interviews/ds/queue/queue_dll/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/queue/queue_dll/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Queue dll  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74  class Empty(Exception): pass class _DoublyLinkedBase: class _Node: __slots__ = &amp;#39;_element&amp;#39;, &amp;#39;_prev&amp;#39;, &amp;#39;_next&amp;#39; def __init__(self, element, prev, next): self.</description>
    </item>
    
    <item>
      <title>Queue List</title>
      <link>https://docs.hackersoon.com/interviews/ds/queue/queue_list/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/queue/queue_list/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Queue List  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47  class Empty(Exception): pass class ArrayQueue: DEFAULT_CAPACITY = 10 def __init__(self): self.</description>
    </item>
    
    <item>
      <title>Queue LL</title>
      <link>https://docs.hackersoon.com/interviews/ds/queue/queue_ll/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/queue/queue_ll/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Queue LL  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46  class Empty(Exception): pass class LinkedQueue: class _Node: __slots__ = &amp;#39;_element&amp;#39;, &amp;#39;_next&amp;#39; def __init__(self, element, next): self.</description>
    </item>
    
    <item>
      <title>Quicksort</title>
      <link>https://docs.hackersoon.com/interviews/algorithms/sorting/quicksort/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/algorithms/sorting/quicksort/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    quicksort  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34  &amp;#34;&amp;#34;&amp;#34;partition logic in quicksort.</description>
    </item>
    
    <item>
      <title>Sliding Window</title>
      <link>https://docs.hackersoon.com/interviews/problemsolving/sliding_window/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/problemsolving/sliding_window/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    sliding window  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21  def max_sum_window_sliding(l, n, k): print(l, n, k) current_sum = 0 if n&amp;lt;k: return False for i in range(k): current_sum += l[i] print(current_sum) max_sum = current_sum for i in range(n-k): print(l[k+i],l[i]) current_sum = current_sum + l[k+i]-l[i] print(current_sum) if max_sum &amp;lt; current_sum: max_sum = current_sum return max_sum max_sum_value = max_sum_window_sliding([1, 4, 2, 10, 23, 3, 1, 0, 20], 9, 4) print(max_sum_value)     </description>
    </item>
    
    <item>
      <title>Stack List</title>
      <link>https://docs.hackersoon.com/interviews/ds/stack/stack_list/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/stack/stack_list/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Stack List  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45  &amp;#34;&amp;#34;&amp;#34;Implementing a stack using python list.</description>
    </item>
    
    <item>
      <title>Stack LL</title>
      <link>https://docs.hackersoon.com/interviews/ds/stack/stack_ll/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/ds/stack/stack_ll/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Stack LL  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39  class Empty(Exception): pass class LinkedStack: class _Node: __slots__ = &amp;#39;_element&amp;#39;, &amp;#39;_next&amp;#39; def __init__(self, element, next): self.</description>
    </item>
    
    <item>
      <title>Trapping Rain Problem</title>
      <link>https://docs.hackersoon.com/interviews/problemsolving/trapping-rain-problem/</link>
      <pubDate>Wed, 11 Dec 2019 11:14:00 +0530</pubDate>
      
      <guid>https://docs.hackersoon.com/interviews/problemsolving/trapping-rain-problem/</guid>
      <description>.caption { text-align: center; background-color: grey; color: white; font-weight: normal; text-decoration: double; } .editorqa { text-align: center; padding: 5px; color: blue; font-weight: bold; font-size: 20px; margin: 5px; } .run { text-align: center; background-color: #343a40; border-color: #343a40; color: #fff; font-weight: normal; width: fit-content; text-decoration: none; cursor: pointer; display: block; padding: .25rem 2.5rem; line-height: 1.5; border-radius: .2rem; box-sizing: border-box; font-size: 1rem; margin-bottom: 2px; font-weight: 400; user-select: none; text-transform: none; }   Run    Trapping Rain Problem  1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32  # Python program to find maximum amount of water that can # be trapped within given set of bars.</description>
    </item>
    
    <item>
      <title>Contribution Guide</title>
      <link>https://docs.hackersoon.com/contribution/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.hackersoon.com/contribution/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>https://docs.hackersoon.com/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://docs.hackersoon.com/credits/</guid>
      <description>Contributors Thanks to them for making Open Source Software a better place ! .ghContributors { display: flex; flex-flow: wrap; align-content: flex-start } .ghContributorsdiv { width: 100%; display: inline-flex; margin-bottom: 20px; } .ghContributorsdiv label { padding-left: 4px; } .ghContributorsdiv span { font-size: x-medium; padding-left: 10px; }   @agrawal-pulkit 12 commits  
Packages and libraries  hugo learn theme shortcodes  </description>
    </item>
    
  </channel>
</rss>